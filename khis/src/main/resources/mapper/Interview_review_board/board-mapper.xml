<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="board">
	<select id="selectAllList" resultMap="memberCompanyType" parameterType = "map">
			select
				count(b.co_code) as count_board,
				TRUNC(avg(b.interview_evaluation), 1) as score,
    			b.co_code,
    			b.occupation_code,
    			o.occupation_name,
    			m.co_name,
    			o.occupation_img_url
			from
    			board b, occupation o, member_company m
			where
    			b.co_code = m.co_code and b.occupation_code = o.occupation_code
    			<if test = "occupation_code != null and !occupation_code.equals('')">
    			and b.occupation_code = #{occupation_code}
    			</if>
			group by 
				b.co_code, b.occupation_code, o.occupation_name, m.co_name, o.occupation_img_url
	</select>
	<select id="selectBoardList" resultMap = "memberCompanyType" parameterType = "String">
    		<!-- select
    			b.co_code,
    			b.occupation_code,
    			o.occupation_name,
    			m.co_name
			from
    			board b, occupation o, member_company m
			where
    			b.co_code = m.co_code and b.occupation_code = o.occupation_code
			group by 
				b.co_code, b.occupation_code, o.occupation_name, m.co_name -->
			select
			    b.co_code,
			    b.occupation_code,
			    o.occupation_name,
			    m.co_name
			from board b
			    join occupation o
			        on b.occupation_code = o.occupation_code
			    join member_company m
			        on b.co_code = m.co_code
			where
			    b.occupation_code = #{occupationCd}
			group by
			    b.co_code, b.occupation_code, o.occupation_name, m.co_name
	</select>
	
	<select id="occupationList" resultType="board">
		select
			occupation_code
		from
			board
		where
			occupation_code = #{occupationCode}
	</select>
	
	<insert id="insertBoard" parameterType="Board" statementType="PREPARED">
		insert into
			 board(
			 board_no,
			 occupation_code,
			 member_no, 
			 co_code,
		     interview_evaluation, 
			 employment_type, 
			 title, 
			 reg_date, 
			 interview_difficulty, 
			 interview_path, 
			 interview_date, 
			 recruitment_method, 
			 announcement_time, 
			 passcheck,
			 interview_question,
			 interview_answer,
			 pass_no)
		values(
			seq_board_no.nextval,
			#{occupationCode},
			#{memberNo},
			TO_NUMBER(#{coCode}),
			#{interviewEvaluation},
			#{employmentType},
			#{title},
			sysdate,
			#{interviewDifficulty},
			#{interviewPath},
			TO_DATE(#{interviewDate}, 'YYYY/MM'),
			#{recruitmentMethod},
			#{announcementTime},
			#{passcheck},
			#{interviewQuestion},
			#{interviewAnswer},
			#{pass_no}
		)
	</insert>
	
	<update id="updateBoard" parameterType="Board">
		update
			board
		set
		     interview_evaluation = #{interviewEvaluation}, 
			 employment_type = #{employmentType}, 
			 title = #{title},  
			 interview_difficulty = #{interviewDifficulty}, 
			 interview_path = #{interviewPath}, 
			 interview_date = TO_DATE(#{interviewDate}, 'YYYY/MM'), 
			 recruitment_method = #{recruitmentMethod}, 
			 announcement_time = #{announcementTime}, 
			 passcheck = #{passcheck},
			 interview_question = #{interviewQuestion},
			 interview_answer = #{interviewAnswer}
		where
			board_no = #{boardNo} and
			pass_no = #{pass_no}
	</update>
	<delete id="deleteBoard">
		delete from
			board
		where
			board_no = #{board}
	</delete>
	
	<select id="getCompanyNm" resultType="map" parameterType = "String">
	select co_address, co_name, co_code from member_company where co_name like '%'||#{coName}||'%' 
	</select>
	
	<select id="selectCompanyList" resultMap="memberCompanyType">
		<!-- select co_address, co_name, co_code from member_company -->
		
		select py.*, mc.*
		from pass_yn py  left join  member_company mc on mc.co_code = py.co_code
		where py.board_write_yn = 'n' and member_info_no = #{member_info_no}
	</select>
	
	<select id="selectBoardTotalCount" resultType="_int" parameterType = "map">
		select
    		count(*)
		from(
    		select
        		m.co_name,
        		o.occupation_name
    		from
        		member_company m, occupation o, board b
    		where
        		b.co_code = m.co_code and b.occupation_code = o.occupation_code
        		<if test = "occupation_code != null and !occupation_code.equals('')">
    			and b.occupation_code = #{occupation_code}
    			</if>
    		group by
        		m.co_name, o.occupation_name)
	</select>
	
	<select id="selectContentsTotalCount" resultType="_int">
		select
    		count(*)
		from
    		board
		where 
    		co_code = #{coCode} and occupation_code = #{occupationCode}
	</select>
	
	
	<select id="selectBoardDetailOne" resultType="map" parameterType = "int">
		select 
			(select co_name from member_company where co_code = (select co_code from board where board_no = ${param})) as co_name,
		 	 board_no,
			 occupation_code,
			 member_no, 
			 co_code,
		     interview_evaluation, 
			 employment_type, 
			 title, 
			 reg_date, 
			 interview_difficulty, 
			 interview_path, 
			 TO_CHAR(interview_date, 'YYYYMM') as interview_date, 
			 recruitment_method, 
			 announcement_time, 
			 passcheck,
			 interview_question,
			 interview_answer,
			 pass_no
			 from board
			 where board_no = ${param}
			 
	</select>
	
	
	<select id="selectDetailList" resultType="map" parameterType = "String">
		select
			b.board_no,
			b.member_no,
    		b.employment_type,
    		TO_CHAR(b.reg_date,'yyyy-MM-dd') as reg_date,
    		b.interview_difficulty,
    		TO_CHAR(b.interview_date,'yyyy/MM') as INTERVIEW_DATE,
    		b.interview_path,
    		b.title,
    		b.interview_question,
    		b.interview_answer,
    		b.recruitment_method,
    		b.announcement_time,
    		b.passcheck,
    		b.interview_evaluation,
            m.co_name,
            m.co_code,
            o.occupation_img_url,
            o.occupation_name
    	from 
    		board b
    			left join member_company m
    				on b.co_code = m.co_code
    			join occupation o
    				on b.occupation_code = o.occupation_code
        where 
        	b.co_code = #{co_code} and b.occupation_code = #{occupation_code}
        order by
        	reg_date desc
	</select>
	

	<select id="selectinterViewAvg" resultType="int" parameterType = "map">
		select TRUNC(AVG(interview_difficulty), 1) from board where co_code = #{co_code} and occupation_code = #{occupation_code}
	</select>
	
	<resultMap id="memberCompanyType" type="BoardMemberCompany">
		<id property="board_no" column="board_no"></id>
		<result property="pass_no" column="pass_no"></result>
		<result property="co_code" column="co_code"></result>
		<result property="co_name" column="co_name"></result>
		<result property="co_address" column="co_address"></result>
		<result property="occupation_code" column="occupation_code"></result>
		<result property="occupation_name" column="occupation_name"></result>
		<result property="count_board" column="count_board"></result>
		<result property="score" column="score"></result>
		<result property="occupation_img_url" column="occupation_img_url"></result>
	
	</resultMap>
	
	
</mapper>



